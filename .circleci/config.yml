version: 2
jobs:
  test:
    docker:
      - image: circleci/node:8.11.3-browsers

    steps:
      - checkout
      - run: sudo npm install i -g yarn@1.7.0
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - /home/circleci/.cache/yarn/v1

      - run: yarn run lint
      - run: yarn run ci-test
      - run: yarn run live-test

  build:
    docker:
      - image: circleci/node:8.11.3-browsers

    steps:
      - checkout
      - run: sudo npm install i -g yarn@1.7.0
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install
      - run:
          name: Build assets
          command: |
            if [ $CIRCLE_BRANCH == "staging" ]
            then
              export WEBPACK_ENV=staging
            fi && \
            yarn dist
      - persist_to_workspace:
          root: .
          paths:
            - dist

  push_image:
    docker:
      - image: docker:18.06.1-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - run: cp -R /tmp/workspace/dist ./dist
      - run: echo "build-$CIRCLE_BUILD_NUM" > buildnum
      - persist_to_workspace:
          root: .
          paths:
            - buildnum
      - run:
          name: Build and push image
          command: |
            docker build -t cpdbdev/mobile-frontend:$(cat buildnum) .
            docker login -u cpdbdev -p $DOCKER_PASSWORD
            docker push cpdbdev/mobile-frontend:$(cat buildnum)

  deploy:
    docker:
      - image: cpdbdev/kubectl:v1.11.3
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Apply deployment
          command: |
            if [ $CIRCLE_BRANCH == "master" ]
            then
              export NAMESPACE=production
            else
              export NAMESPACE=staging
            fi
            echo $KUBECONFIG_JSON > /root/project/config.json
            IMAGE_TAG=$(cat /tmp/workspace/buildnum) templater mobile-frontend.yml | kubectl --kubeconfig /root/project/config.json apply -f - --namespace=$NAMESPACE

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - staging
                - master
      - push_image:
          requires:
            - build
      - deploy:
          requires:
            - push_image
